<?php
/**
 * @namespace
 */
namespace de\imxnet\imxplatformphp\varnish\invalidation;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-06-01 at 19:32:15.
 */
class FOSHttpTest extends \de\codenamephp\platform\test\TestCase {

  /**
   * @var FOSHttp
   */
  private $sut = null;

  protected function setUp() {

    $client = \Mockery::mock(\FOS\HttpCache\ProxyClient\Varnish::class);

    $this->sut = new FOSHttp($client);
  }

  public function testban_canDelegateBanToClient() {
    $client = \Mockery::mock(\FOS\HttpCache\ProxyClient\Varnish::class)->shouldReceive('ban')->once()->with(['some', 'headers'])->getMock();
    $this->sut->setClient($client);

    $this->sut->ban(['some', 'headers']);
  }

  public function testbanPath_canDelegateBanPathToClient() {
    $client = \Mockery::mock(\FOS\HttpCache\ProxyClient\Varnish::class)->shouldReceive('banPath')->once()->with('path', 'some content type', 'some host')->getMock();
    $this->sut->setClient($client);

    $this->sut->banPath('path', 'some content type', 'some host');
  }

  public function testflush_canDelegateFlushToClient() {
    $client = \Mockery::mock(\FOS\HttpCache\ProxyClient\Varnish::class)->shouldReceive('flush')->once()->getMock();
    $this->sut->setClient($client);

    $this->sut->flush();
  }

  /**
   * @expectedException \de\imxnet\imxplatformphp\varnish\Exception
   * @expectedExceptionMessage The flushing failed!
   */
  public function testflush_canRethrowException() {
    $client = \Mockery::mock(\FOS\HttpCache\ProxyClient\Varnish::class)->shouldReceive('flush')->once()->andThrow(new \FOS\HttpCache\Exception\ExceptionCollection())->getMock();
    $this->sut->setClient($client);

    $this->sut->flush();
  }
}
